"""add table

Revision ID: aa3dae0a14d5
Revises: 3cd2a1c7625b
Create Date: 2024-11-25 13:23:18.454233

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'aa3dae0a14d5'
down_revision: Union[str, None] = '3cd2a1c7625b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('date', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    pages_table = sa.table('pages',
        sa.column('title', sa.String),
        sa.column('content', sa.Text),
    )

    op.bulk_insert(
        pages_table,
        [
            {
                'title': 'Виртуальная интерактивная доска',
                'content': '''
                    <p>
                    В современном мире в большенстве школах имеют ограниченый бюджет для
                    обеспечения технической аппаратурой в классах. Данный проект
                    позволяет пользоваться интерактивной доской сократив закупки
                    подобного оборудования (smart deck) минимум в 3 раза.
                    </p>
                    <p>
                    Для того что бы пользоваться нашим продуктом достаточно иметь:
                    <ul>
                        <li>Проектор</li>
                        <li>Веб-камера</li>
                        <li>Лазерная указка</li>
                    </ul>
                    </p>
                '''
            },
            {
                'title': 'Как это работает?',
                'content': '''
                    <p>
                    В видео продемонстрировано пример работы данной программы в
                    реальной жизни. Данная программа позволяет взаимодействовать с
                    програмным обеспечением и рисовать на однотонной рабочей
                    поверхности через лазерную указку.
                    </p>
                    <p>
                    Проектор и веб-камера направлены на однотонную поверхность, где
                    проектор эмитирует поверхность доски, а вебкамера транслирует
                    видопоток в данное програмное обеспечение. Программа путем
                    машинного зрения распознает лазерный луч и производит
                    математические расчеты. Далее после успешного расчета, на экран
                    проетора выводятся линии повторяющие траекторию движения
                    лазерного указателя.
                    </p>
                    <p>
                    Алгоритм на основе цветовых фильтров реализован таким образом,
                    что полученное изображение в формате RGB, переводится в
                    несколько других форматов (HSV, HLS, RGB). Потом для каждого
                    формата применяется соответствующая диапазонная маска,
                    выделяющая нужный набор цветовых данных. Также дополнительно
                    применяются алгоритмы для уменьшения зашумленности входного
                    изображения и ди-скейлинга картинки. В совокупности это дает
                    устойчивый результат для определения цветового пятна в различных
                    условиях освещенности помещения. При этом за счет
                    комплексирования различных цветовых пространств, снижается
                    количество возможных источников ложных срабатываний (фонарик,
                    УФ-лампы и подобное, что имеет схожий эффект с лазерной указкой)
                    </p>
                '''
            },
            {
                'title': 'Выбор цвета лазера',
                'content': '''
                    <p>Лазер можно настраивать из 4 цветов:
                    <ul>
                        <li>Красный</li>
                        <li>Зеленый</li>
                        <li>Желтый</li>
                        <li>Синий</li>
                    </ul></p>
                '''
            },
            {
                'title': 'Выбор цвета лазера',
                'content': '''
                    <p>Для начала работы вам потребуется скачать програмное обеспечение
                    для вашей платформы
                    <ul>
                        <li><a href="https://github.com/JooudDoo/BoardDrawerRepo/releases/download/v1.0.1/board-drawer.exe">Windows</a></li>
                        <li><a href="https://github.com/JooudDoo/BoardDrawerRepo/releases/download/v1.0.1/board-drawer">Linux</a></li>
                    </ul>
                    </p>
                '''
            },
            {
                'title': 'Меню',
                'content': '''
                    <p>При запуске приложения вы попадаете в меню, где у пользователя
                    есть выбор
                    <ul>
                        <li>(Режим рисования) - в данном режиме пользователь переносится
                        в окно где он сможет рисовать благодаря лазерной указке, так
                        же пользователю предоставлен большой спектр настроек и
                        калибровочный режим для комфортной работы с программным
                        обеспечением
                        </li>
                        <li>(Интерактивный режим) - В разработке</li>
                    </ul></p>
                '''
            },
            {
                'title': 'Настройки',
                'content': '''
                    <p>В верхнем левом углу располагается кнопка настроек, благодаря
                    которой можно отображать и скрывать окно настроек. В настройках
                    пользователь может проводить настройки:
                    <ul>
                        <li>
                        Настройка ручки - пользователь может выбрать цвет рисунка,
                        который будет повторять движение лазера
                        </li>
                        <li>
                        Настройки цвета - пользователь в данном блоке проводит
                        настройки HUE - (
                        <i>
                        Hue - это три первичных основных цвета-красный, синий и
                        желтый
                        </i>
                        ), насыщение, значение
                        </li>
                        <li>
                        Настройка обработки камеры - пользователь выбирает диапазон
                        FPS - ( <i>частота кадров</i>)
                        </li>
                        <li>
                        Настройки для отображения - пользователь с помощью флажков
                        отключает или включает следующие показатели
                        <ul>
                            <li>
                            Показывать картинку с камеры - на экране будет
                            отображаться запись с Веб-камеры
                            </li>
                            <li>
                            Показывать маску лазера - на экране будет отображаться
                            рисунок, повторяющий траекторию лазера
                            </li>
                            <li>
                            Отключить рисование - на экране не будет отображаться
                            рисунок, повторяющий траекторию лазера, алгоритм не будет
                            производить расчеты и отслеживать лазер
                            </li>
                        </ul>
                        </li>
                    </ul>
                    Все настройки можно сохранять.</p>
                '''
            },
            {
                'title': 'Программа',
                'content': '''
                    <p>Программа для обработки лазера написана на языке Python. Для начала работы нужно:
                    <ul>
                        <li>Склонировать проект git clone git@github.com:EmelyanovAlexey/BoardDocumentation.git</li>
                        <li>Подготовка среды pip install uv</li>
                        <li>Активировать среду .\\.venv\\Scripts\\activate</li>
                        <li>Установка зависимостей uv pip install -e .[dev]</li>
                        <li>Запуск board-drawer</li>
                    </ul></p>
                '''
            },
            {
                'title': 'Front-end',
                'content': '''
                    <p>Front-end написан на языке JS с использованием библиотеки React.js, Redux, Saga:
                    <ul>
                        <li>Склонировать проект git clone git@github.com:EmelyanovAlexey/BoardDocumentation.git</li>
                        <li>Установить yarn npm i yarn</li>
                        <li>Перейти в каталог cd Front_end</li>
                        <li>Установка зависимостей yarn install --openssl-legacy-provider</li>
                        <li>Запуск yarn start</li>
                    </ul></p>
                '''
            }
        ]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reviews')
    # ### end Alembic commands ###
